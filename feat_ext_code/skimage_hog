#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
@author: leena
"""

################# THis function returns 2 numpy arrays, each containing HoG descriptors for train and test images extracted from CIFAR-10 data

import matplotlib.pyplot as plt
from skimage.feature import hog
from skimage import data, color, exposure
import cv2
import numpy as np
import os

dir_name = "/home/leena/Documents/Projects/CV/Recipes/papers/preactivation_and_wide_resnet/res_net/res_net_code"
os.chdir(dir_name)

#loading image data to know the size
train_data = np.load('X_train.npy')
train_len_data = len(train_data)

test_data = np.load('X_test.npy')
test_len_data = len(test_data)


train_hog_descriptors_list = [] 
test_hog_descriptors_list = [] 


#####################Below code is to extract HoG descriptors for train images###########

for x in range(train_len_data):
    
    dir_name = "/home/leena/Documents/Projects/CV/Recipes/papers/preactivation_and_wide_resnet/res_net/complete_images/train"
    os.chdir(dir_name)
    
    #image = color.rgb2gray(data.astronaut()) #test image from library 
    file_name = "image%s" %x
    image = cv2.imread(file_name + ".jpg")
    image= cv2.cvtColor(image ,cv2.COLOR_BGR2GRAY)
    
    fd, hog_image = hog(image, orientations=8, pixels_per_cell=(2, 2), cells_per_block=(1, 1), visualise=True)
    output = np.reshape(hog_image, [1, 32, 32])
    train_hog_descriptors_list.append(output)
    
    dir_name = "/home/leena/Documents/Projects/CV/Recipes/papers/preactivation_and_wide_resnet/res_net/hog_images/train"
    os.chdir(dir_name)
    cv2.imwrite(file_name + ".jpg", hog_image)
    
dir_name = "/home/leena/Documents/Projects/CV/Recipes/papers/preactivation_and_wide_resnet/res_net/res_net_code"
os.chdir(dir_name)    
#stacking all the descriptors  
train_hog_descriptors = np.vstack(train_hog_descriptors_list)
np.save("train_hog_descriptors.npy", train_hog_descriptors) 
 


    
###################Use the code below to visualize the output of HoG Descriptors

#    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(8, 4), sharex=True, sharey=True)
#    ax1.axis('off')
#    ax1.imshow(image, cmap=plt.cm.gray)
#    ax1.set_title('Input image')
#    ax1.set_adjustable('box-forced')
#    
#    # Rescale histogram for better display
#    #hog_image_rescaled = exposure.rescale_intensity(hog_image, in_range=(0, 0.02))
#    
#    ax2.axis('off')
#    ax2.imshow(hog_image_rescaled, cmap=plt.cm.gray)
#    ax2.set_title('Histogram of Oriented Gradients')
#    ax1.set_adjustable('box-forced')
#    plt.show()


#####################Below code is to extract HoG descriptors for test images###########
for x in range(test_len_data):    
    
    dir_name = "/home/leena/Documents/Projects/CV/Recipes/papers/preactivation_and_wide_resnet/res_net/complete_images/test"
    os.chdir(dir_name)
    
    file_name = "image%s" %x
    image = cv2.imread(file_name + ".jpg")
    image= cv2.cvtColor(image ,cv2.COLOR_BGR2GRAY)
    
    fd, hog_image = hog(image, orientations=8, pixels_per_cell=(2, 2), cells_per_block=(1, 1), visualise=True)
    
    output = np.reshape(output, [1, 32, 32])
    test_hog_descriptors_list.append(hog_image)
    
    dir_name = "/home/leena/Documents/Projects/CV/Recipes/papers/preactivation_and_wide_resnet/res_net/hog_images/test"
    os.chdir(dir_name)
    cv2.imwrite(file_name + ".jpg", hog_image)

dir_name = "/home/leena/Documents/Projects/CV/Recipes/papers/preactivation_and_wide_resnet/res_net/res_net_code"
os.chdir(dir_name)    
#stacking all the descriptors  
test_hog_descriptors = np.vstack(test_hog_descriptors_list)
np.save("test_hog_descriptors.npy", test_hog_descriptors)     


